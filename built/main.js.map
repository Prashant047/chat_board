{"version":3,"sources":["../src/main.js"],"names":["app","server","Server","socket","PORT","listen","error","console","log","no_of_clients","clients","on","client","emit","man","data","temp","id","toString","name","push","broadcast","message_to","message_from","message","forEach","item","index"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;;;AACA;AACA,IAAMA,MAAM,wBAAZ,C,CALA;;AAMA,IAAMC,SAAS,eAAKC,MAAL,CAAYF,GAAZ,CAAf;AACA,IAAMG,SAAS,sBAAGF,MAAH,CAAf;;AAEA,IAAMG,OAAO,IAAb;;AAEA;AACAH,OAAOI,MAAP,CAAcD,IAAd,EAAmB,UAACE,KAAD,EAAW;AAC1B,QAAGA,KAAH,EAAS;AACLC,gBAAQC,GAAR,CAAYF,KAAZ;AACH,KAFD,MAGI;AACAC,gBAAQC,GAAR,6BAAsCJ,IAAtC;AACH;AACJ,CAPD;AAQA;;AAEA,IAAIK,gBAAgB,CAApB;AACA,IAAIC,UAAU,EAAd;;AAGA;AACAP,OAAOQ,EAAP,CAAU,YAAV,EAAwB,UAACC,MAAD,EAAW;AAC/BH;AACA;AACAG,WAAOC,IAAP,CAAY,kBAAZ,EAA+B;AAC3BC,aAAK;AADsB,KAA/B;;AAIA;AACAF,WAAOD,EAAP,CAAU,aAAV,EAAwB,UAACI,IAAD,EAAS;AAC7B,YAAIC,OAAO;AACPC,gBAAIL,OAAOK,EAAP,CAAUC,QAAV,EADG;AAEPC,kBAAMJ,KAAKI;AAFJ,SAAX;;AAKAT,gBAAQU,IAAR,CAAaJ,IAAb;AACAT,gBAAQC,GAAR,CAAeO,KAAKI,IAApB;AACH,KARD;AASA;;;AAGA;AACAP,WAAOD,EAAP,CAAU,WAAV,EAAsB,UAACI,IAAD,EAAU;AAC5BH,eAAOC,IAAP,CAAY,WAAZ,EAAwB;AACpBH,qBAASA;AADW,SAAxB;AAGH,KAJD;AAKA;;;AAGA;AACA;AACAE,WAAOD,EAAP,CAAU,cAAV,EAAyB,UAACI,IAAD,EAAU;;AAE/B;;AAEAH,eAAOS,SAAP,CAAiBR,IAAjB,CAAsBE,KAAKO,UAAL,CAAgBJ,QAAhB,EAAtB,EAAiD;AAC7CK,0BAAcR,KAAKQ,YAD0B;AAE7CC,qBAAST,KAAKS;AAF+B,SAAjD;AAIH,KARD;AASA;;AAEAZ,WAAOD,EAAP,CAAU,YAAV,EAAuB,YAAM;AACzBF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEAC,gBAAQe,OAAR,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC7B,gBAAGD,KAAKT,EAAL,IAAWL,OAAOK,EAAP,CAAUC,QAAV,EAAd,EAAmC;AAC/BX,wBAAQC,GAAR,CAAekB,KAAKP,IAApB;AACAO,qBAAKP,IAAL,GAAYO,KAAKP,IAAL,GAAY,gBAAxB;AACAO,qBAAKT,EAAL,GAAU,EAAV;AACH;AACJ,SAND;AAQH,KAlBD;AAmBH,CA7DD","file":"main.js","sourcesContent":["//importing modules==============================\nimport express from 'express';\nimport http from 'http';\nimport io from 'socket.io';\n//-----------------------------------------------\nconst app = express();\nconst server = http.Server(app);\nconst socket = io(server);\n\nconst PORT = 8081;\n\n//Starting the server============================\nserver.listen(PORT,(error) => {\n    if(error){\n        console.log(error);\n    }\n    else{\n        console.log(`Server running on port ${PORT}`);\n    }\n});\n//-----------------------------------------------\n\nlet no_of_clients = 0;\nlet clients = [];\n\n\n// when socket accepts connection=================\nsocket.on('connection', (client) =>{\n    no_of_clients++;\n    // console.log(`client ${client.id} has connected`);\n    client.emit('yo_are_connected',{\n        man: \"yes you are!!!\"\n    });\n\n    //add the connected client to the list======================\n    client.on('add_to_list',(data) =>{\n        let temp = {\n            id: client.id.toString(),\n            name: data.name\n        };\n        \n        clients.push(temp);\n        console.log(`${data.name} has connected.`);\n    });\n    //----------------------------------------------------------\n\n\n    //shows the list of connected clients on client side========\n    client.on('show_list',(data) => {\n        client.emit('take_list',{\n            clients: clients\n        });\n    });\n    //----------------------------------------------------------\n\n\n    //send message from one client to other=====================\n    //handeler for sending messages\n    client.on('send_message',(data) => {\n\n        // console.log(data);\n\n        client.broadcast.emit(data.message_to.toString(),{\n            message_from: data.message_from,\n            message: data.message\n        });\n    });\n    //----------------------------------------------------------\n\n    client.on('disconnect',() => {\n        no_of_clients--;\n        // console.log(`${getClientNameFromId(clients,client.id.toString())} disconnected.`)\n        \n        // for(let i = 0;i<clients.length;i++){\n        //     if(clients[i].id == client.id.toString()){\n        //         console.log(clients[i].name);\n        //     }\n        // }\n\n        clients.forEach((item, index) => {\n            if(item.id == client.id.toString()){\n                console.log(`${item.name} has disconnected`);\n                item.name = item.name + ' -disconnected';\n                item.id = '';\n            }\n        });\n        \n    });\n});\n\n"]}